@import './vars.less';


.flexbox() {
  display: -webkit-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}
.flexbox-inline() {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
}
.flex-wrap(@fw) when (@fw = nowrap) {
  -webkit-box-lines: single;
  -moz-box-lines: single;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: none;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
}
.flex-wrap(@fw) when (@fw = wrap) {
  -webkit-box-lines: multiple;
  -moz-box-lines: multiple;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}
.flex-wrap(@fw) when not (@fw = wrap) and not (@fw = nowrap) {
  -webkit-flex-wrap: @fw;
  -ms-flex-wrap: @fw;
  flex-wrap: @fw;
}
.flex-direction(@d) {
  -webkit-flex-direction: @d;
  -ms-flex-direction: @d;
  flex-direction: @d;
}
.justify-content(@jc) when (@jc = flex-start) {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
}
.justify-content(@jc) when (@jc = flex-end) {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  -webkit-justify-content: flex-end;
  justify-content: flex-end;
}
.justify-content(@jc) when (@jc = space-between) {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}
.justify-content(@jc) when not (@jc = flex-start) and not (@jc = flex-end) and not (@jc = space-between) {
  -webkit-box-pack: @jc;
  -ms-flex-pack: @jc;
  -webkit-justify-content: @jc;
  justify-content: @jc;
}
.align-items(@ai) when (@ai = flex-start) {
  -webkit-box-align: start;
  -ms-flex-align: start;
  -webkit-align-items: flex-start;
  align-items: flex-start;
}
.align-items(@ai) when (@ai = flex-end) {
  -webkit-box-align: end;
  -ms-flex-align: end;
  -webkit-align-items: flex-end;
  align-items: flex-end;
}
.align-items(@ai) when not (@ai = flex-start) and not (@ai = flex-end) {
  -webkit-box-align: @ai;
  -ms-flex-align: @ai;
  -webkit-align-items: @ai;
  align-items: @ai;
}
.align-content(@ai) {
  -ms-flex-line-pack: @ai;
  -webkit-align-content: @ai;
  align-content: @ai;
}
.align-self(@as) {
  -ms-flex-item-align: @as;
  -webkit-align-self: @as;
  align-self: @as;
}

.flex-grow(@fg) {
  -webkit-flex-grow:@fg;
  -ms-grow: @fg;
  flex-grow:@fg;
}
.flex-shrink(@fs) {
  -webkit-flex-shrink: @fs;
  -ms-flex: 0 @fs auto;
  flex-shrink: @fs;
}

.transition(@p, @d, @t) {
  -webkit-transition: @p @d @t;
      transition: @p @d @t;
}
.delay(@d) {
  -webkit-transition-delay: @d;
      transition-delay: @d;
}
.transform(@t) {
  -webkit-transform: @t;
      transform: @t;
}
.transform-origin(@to) {
  -webkit-transform-origin: @to;
      transform-origin: @to;
}
.translate3d(@x:0, @y:0, @z:0) {
  -webkit-transform: translate3d(@x,@y,@z);
  transform: translate3d(@x,@y,@z);
}
.animation(@a) {
  -webkit-animation: @a;
  animation: @a;
}

.ellipsis(@mutiple: false) when (@mutiple = false)
{
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
.ellipsis(@mutiple)
{
  display: -webkit-box;
  -webkit-line-clamp: @mutiple;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
.scrollable()
{
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}
.hairline(@align, @color: var(--color-line))
{
  position: absolute;
  top: 0;
  @{align}: 0;
  content: '';
  font-size: 0;
  line-height: 0;
  border-@{align}: 1px solid @color;
}
.hairline(@align) when not (@align = top) and not (@align = bottom)
{
  height: 100%;
  transform: scaleX(0.5);
}
.hairline(@align) when not (@align = right) and not (@align = left)
{
  width: 100%;
  transform: scaleY(0.5);
}
